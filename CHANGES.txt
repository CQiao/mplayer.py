PyMPlayer 0.7.0

Changes since 0.6.0

--------------------
     Highlights
--------------------

 * Getting output from MPlayer is now thread-safe (a Queue is now used)
 * Data can now be obtained asynchronously from Player objects (via subscribers)
 * Revamped generation of properties (using functools.partial objects)
 * Added type checking to generated methods and properties
 * Added value checking to generated properties
 * Abstracted MPlayer type handling away from the core (see mtypes module)
 * Python 2.x: unicode and str fixes


--------------------
        API
--------------------
Changes:
 * Rename class: CommandPrefix -> CmdPrefix

 * Rename attribute: Player.command_prefix -> Player.cmd_prefix

 * Rename attribute: Player.path -> Player.exec_path

 * The 'path' property is no longer renamed to 'filepath'. Player.path now
   pertains to the actual 'path' property of MPlayer. That is:

      Player.filepath -> Player.path

 * AsyncPlayer's optional 'socket_map' parameter has been renamed to 'map'.
   The new signature is now:
   AsyncPlayer(args=(), stdout=PIPE, stderr=None, autospawn=True, map=None)

 * Rename method: Player.stdout.hook() -> Player.stdout.connect()
   (NOTE: Also applies to Player.stderr)

 * Similarly, Player.stdout/stderr.unhook() has been renamed to disconnect().
   Moreover, the parameter of disconnect() is now optional (default: None).
   If no parameter is supplied, the list of subscribers is cleared.

      unhook(subscriber) -> disconnect(subscriber=None)

 * Removed optional 'prefix' parameter from generated methods.
   That is, for instance:

      pause(prefix=None) -> pause()

 * Rename 'complete'/'completed' signal to 'eof'; the EOF code (int) is passed
   to the callbacks


Additions:
 * Class attribute: CmdPrefix.NONE (which basically means 'no prefix')

 * Class attribute: Player.version (version of the introspected MPlayer executable)


Deletions:
 * Player.get_meta_*():
   Removed all get_meta_* methods. Use the 'metadata' property instead.
